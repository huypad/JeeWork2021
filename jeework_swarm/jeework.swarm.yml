version: '3.9'

networks:
  vault_vault_network:
    external: true
  traefik_traefik-network:
    external: true
  kafka-network:
    external: true

services:
  api:
    image: registry.jee.vn/hoaaq/jeework-api:latest
    networks:
      - vault_vault_network
      - traefik_traefik-network
      - kafka-network
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      VaultConfig__Endpoint: ${VAULT_ENDPOINT}
      VaultConfig__Token: ${VAULT_TOKEN}
      MinioConfig__MinioSSL: "true"
      MinioConfig__MinioServer: "cdn.jee.vn"
      AppConfig__AppCode: WORK
      AppConfig__IsOnlineDB: "1"
      AppConfig__DecryptKey: WORK
      AppConfig__SysName: JeeWork
      AppConfig__ConnectionString: ${CONNECTION_STRING}
      AppConfig__SecretKey: 6LfyWeYUAAAAAPMDrJF8PQ6hsO0ytRLRIc2fKgds
      AppConfig__Key: ZbsHPbRqNvdgMfyG
      AppConfig__Error_MailTo: huytv@dps.com.vn
      AppConfig__Error_MailCC: huypaddaica@gmail.com
      KafkaConfig__Brokers: ${KAFKA_BROKER}
      KafkaConfig__ProjectName: jee-work
      KafkaConfig__TopicProduce__JeeplatformInitializationAppupdate: jeeplatform.initialization.appupdate
      KafkaConfig__TopicConsume__JeeplatformInitialization: jeeplatform.initialization
      KafkaConfig__TopicConsume__JeeplatformUpdateAdmin: jeeplatform.updateadmin
      KafkaConfig__Consumer__JeeWorkGroupInit: jeework-group-init
      KafkaConfig__Consumer__JeeWorkGroupUpdateAdmin: jeework-group-updateadmin
      Host__JeeWork_API: ${HOST_JEEWORK_API}
      Host__JeeWork_BE: ${HOST_JEEWORK_BE}
      Host__JeeAccount_API: ${HOST_JEEACCOUNT_API}
      Host__Issuer: ${HOST_ISSUER}
      Host__MinIOBrowser: ${HOST_MINIO}
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        failure_action: rollback
        order: start-first
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik_traefik-network
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.jeeworkapi-http.rule=Host(`jeework-api.${DOMAIN}`)
        - traefik.http.routers.jeeworkapi-http.entrypoints=http
        - traefik.http.routers.jeeworkapi-http.middlewares=https-redirect
        - traefik.http.routers.jeeworkapi-https.rule=Host(`jeework-api.${DOMAIN}`)
        - traefik.http.routers.jeeworkapi-https.entrypoints=https
        - traefik.http.routers.jeeworkapi-https.tls=true
        - traefik.http.routers.jeeworkapi-https.tls.certresolver=le
        - traefik.http.services.jeeworkapi.loadbalancer.server.port=80

  backend:
    image: registry.jee.vn/hoaaq/jeework-backend:latest
    networks:
      - traefik_traefik-network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        failure_action: rollback
        order: start-first
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik_traefik-network
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.jeeworkbackend-http.rule=Host(`jeework.${DOMAIN}`)
        - traefik.http.routers.jeeworkbackend-http.entrypoints=http
        - traefik.http.routers.jeeworkbackend-http.middlewares=https-redirect
        - traefik.http.routers.jeeworkbackend-https.rule=Host(`jeework.${DOMAIN}`)
        - traefik.http.routers.jeeworkbackend-https.entrypoints=https
        - traefik.http.routers.jeeworkbackend-https.tls=true
        - traefik.http.routers.jeeworkbackend-https.tls.certresolver=le
        - traefik.http.services.jeeworkbackend.loadbalancer.server.port=80