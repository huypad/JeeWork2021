pipeline {
    environment {
        REGISTRY_HOST = "registry.jee.com.vn"
        REGISTRY_PUBLISHER = "dps"
        REGISTRY_CRED = "registry"
        PROJECT_NAME = "jeework-api"
        DOMAIN = "jee.com.vn"
        SUBDOMAIN = "jeework-api"
        STACK_NAME = "jeework"

        ASPNETCORE_ENVIRONMENT = "Staging"
        VAULT_ENDPOINT = "http://vault:8200"
        VAULT_TOKEN = "s.KQZZuANDstIS5wVjJjjnPJYL"
        KAFKA_BROKER = "kafka:9999"
        HOST_CDN = "cdn.jee.com.vn"
        HOST_JEEWORK_BE = "https://jeework.jee.com.vn"
        HOST_JEEWORK_API = "https://jeework-api.jee.com.vn"
        HOST_ACCOUNT_API = "http://jeeaccount_api"
        HOST_JEECOMMENT_API = "http://jeecomment_api"
        APP_ISONLINEDB = "null"
        APP_CONNECTIONSTRING="Data Source=192.168.199.4,1433;Initial Catalog=jeework;User ID=jeework;Password=Jee33W0rkdB"
        APP_SECRETKEY = "6LfyWeYUAAAAAPMDrJF8PQ6hsO0ytRLRIc2fKgds"
        APP_KEY = "ZbsHPbRqNvdgMfyG"
        SIZE_UPLOAD = "200000000"

        MAIL_TO = "nguyenchisanh1999@gmail.com"

        MAIL_TO = "nguyenchisanh1999@gmail.com"

        service = ""
    }
    agent any
    stages {
        stage('Clone repository') {
            steps {
                script {
                    checkout scm
                }
            }
        }
        stage('Copy package folder') {
            steps {
                script {
                    sh "cp -R packages API_JeeWork2021/packages/"
                }
            }
        }
        stage('Build image') {
            steps {
                script {
                    dir("API_JeeWork2021"){
                        service = docker.build("${REGISTRY_HOST}/${REGISTRY_PUBLISHER}/${PROJECT_NAME}:latest")
                    }
                }
            }
        }
        stage('Push image') {
            steps {
                script {
                    docker.withRegistry("https://${REGISTRY_HOST}", REGISTRY_CRED) {
                        service.push("latest")
                    }
                }
            }
        }
        stage('Stack deploy') {
            steps {
                script {
                    docker.withRegistry("https://${REGISTRY_HOST}", REGISTRY_CRED) {
                        dir("API_JeeWork2021/__BUILD__"){
                            sh "docker stack deploy -c swarm.yml --with-registry-auth ${STACK_NAME}"
                        }
                    }
                }
            }
        }
        stage('Cleaning up') {
            steps{
                sh "docker image prune -f"
            }
        }
    }
    post {
        always {
            emailext subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!',                        
                            to: "$MAIL_TO",   
                            body: '${SCRIPT, template="groovy-html.template"}',
                            mimeType: 'text/html',
                            attachLog: true 
        }
    }
}